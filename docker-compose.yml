version: "3.1"

services:
  app:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    tty: true
    working_dir: /var/www/html/tests
    ports:
      - 8000:8000
    volumes:
      - ./:/var/www/html/tests
    depends_on:
      - postgres
      - nginx
    command: bash -c "composer install && php artisan key:generate && php artisan migrate && php artisan db:seed && chmod -R 777 storage && npm ci && npm run prod && php"
  nginx:
    image: nginx:1.13
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www/html/tests
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - php-fpm
  php-fpm:
    build:
      context: ./docker/php-fpm
    volumes:
      - ./:/var/www/html/tests
    depends_on:
      - postgres
  postgres:
    build:
      context: ./docker/database
    ports:
      - 5432:5432
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DATABASE: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_ROOT_PASSWORD: postgres
  redis:
    image: redis:5.0.5
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    volumes:
      - redis-volume:/var/lib/redis
    restart: always
volumes:
  postgres-volume:
  redis-volume:
